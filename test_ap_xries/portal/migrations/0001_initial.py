# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-07 09:41
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApexUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_manage_cluster', 'Upload Cluster'), ('can_manage_signature', 'Upload Signature'), ('can_view_age', 'Type Age View'), ('can_edit_age', 'Type Age Edit'), ('can_approve_age', 'Type Age Approve '), ('can_view_android', 'Type Android View'), ('can_edit_android', 'Type Android Edit'), ('can_approve_android', 'Type Android Approve '), ('can_view_android_elf', 'Type Android_Elf View'), ('can_edit_android_elf', 'Type Android_Elf Edit'), ('can_approve_android_elf', 'Type Android_Elf Approve '), ('can_view_vbs', 'Type Vbs View'), ('can_edit_vbs', 'Type Vbs Edit'), ('can_approve_vbs', 'Type Vbs Approve '), ('can_view_auto_it', 'Type Auto_It View'), ('can_edit_auto_it', 'Type Auto_It Edit'), ('can_approve_auto_it', 'Type Auto_It Approve '), ('can_view_elf', 'Type Elf View'), ('can_edit_elf', 'Type Elf Edit'), ('can_approve_elf', 'Type Elf Approve '), ('can_view_eml', 'Type Eml View'), ('can_edit_eml', 'Edit Eml Edit'), ('can_approve_eml', 'Type Eml Approve '), ('can_view_ole', 'Type Ole View'), ('can_edit_ole', 'Type Ole Edit'), ('can_approve_ole', 'Type Ole Approve '), ('can_view_rtf', 'Type Rtf View'), ('can_edit_rtf', 'Type Rtf Edit'), ('can_approve_rtf', 'Type Rtf Approve '), ('manager_state', 'Manager State'), ('signature_manager_state', 'Signature Manager State'), ('cluster_manager_state', 'Cluster Manager State'), ('role_manager', 'Role Manager'), ('role_reviewer', 'Role Reviewer'), ('role_qa', 'Role QA')),
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
